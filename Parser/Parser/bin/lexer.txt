1 < TAG
1 const CONST
2 int INT
2 a IDENTIFICATOR
2 = ASSIGN_OP
2 0 CONST_INT
2 ; SEMICOLON
3 int INT
3 b IDENTIFICATOR
3 = ASSIGN_OP
3 2 CONST_INT
3 ; SEMICOLON
4 /> END_TAG
5 < TAG
5 main MAIN
6 array ARRAY
6 mas IDENTIFICATOR
6 [ BRACKET_L
6 10 CONST_INT
6 ] BRACKET_R
6 = ASSIGN_OP
6 { FIGURE_L
6 8 CONST_INT
6 , COMMA
6 2 CONST_INT
6 , COMMA
6 4 CONST_INT
6 , COMMA
6 7 CONST_INT
6 , COMMA
6 3 CONST_INT
6 , COMMA
6 3 CONST_INT
6 , COMMA
6 9 CONST_INT
6 , COMMA
6 1 CONST_INT
6 } FIGURE_R
6 ; SEMICOLON
7 < TAG
7 for FOR
7 i IDENTIFICATOR
7 = ASSIGN_OP
7 0 CONST_INT
7 to TO
7 10 CONST_INT
8 int INT
8 f IDENTIFICATOR
8 = ASSIGN_OP
8 2 CONST_INT
8 ; SEMICOLON
9 < TAG
9 for FOR
9 j IDENTIFICATOR
9 = ASSIGN_OP
9 0 CONST_INT
9 to TO
9 10 CONST_INT
10 if IF
10 mas IDENTIFICATOR
10 [ BRACKET_L
10 j IDENTIFICATOR
10 ] BRACKET_R
10 mor CHEVRON_R
10 mas IDENTIFICATOR
10 [ BRACKET_L
10 j IDENTIFICATOR
10 + PLUS
10 1 CONST_INT
10 ] BRACKET_R
11 < TAG
11 true THEN
12 int INT
12 buf IDENTIFICATOR
12 = ASSIGN_OP
12 mas IDENTIFICATOR
12 [ BRACKET_L
12 j IDENTIFICATOR
12 ] BRACKET_R
12 ; SEMICOLON
13 mas IDENTIFICATOR
13 [ BRACKET_L
13 j IDENTIFICATOR
13 ] BRACKET_R
13 = ASSIGN_OP
13 mas IDENTIFICATOR
13 [ BRACKET_L
13 j IDENTIFICATOR
13 + PLUS
13 1 CONST_INT
13 ] BRACKET_R
13 ; SEMICOLON
14 mas IDENTIFICATOR
14 [ BRACKET_L
14 j IDENTIFICATOR
14 + PLUS
14 1 CONST_INT
14 ] BRACKET_R
14 = ASSIGN_OP
14 mas IDENTIFICATOR
14 [ BRACKET_L
14 j IDENTIFICATOR
14 ] BRACKET_R
14 ; SEMICOLON
15 /> END_TAG
16 < TAG
16 false ELSE
17 int INT
17 x IDENTIFICATOR
17 = ASSIGN_OP
17 0 CONST_INT
17 ; SEMICOLON
18 /> END_TAG
19 /> END_TAG
20 /> END_TAG
21 < TAG
21 for FOR
21 j IDENTIFICATOR
21 = ASSIGN_OP
21 0 CONST_INT
21 to TO
21 10 CONST_INT
22 output OUTPUT
22 ( PARENTHESIS_L
22 mas IDENTIFICATOR
22 [ BRACKET_L
22 j IDENTIFICATOR
22 ] BRACKET_R
22 ) PARENTHESIS_R
22 ; SEMICOLON
23 /> END_TAG
24 /> END_TAG
